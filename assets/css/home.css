/* This is all rewritten CSS, in my attempt to not only get CSS to work
But to actually understand it.
As to be honest I've hated CSS for years. */

.container {
  /* Targets the overall container for inner page content */

  width: 80%; /* Sets how large its width will be in the overall page */
  text-align: center;
  border-radius: 3px;
  overflow: hidden; /* Ensures this item will not scroll */
  padding: 20px; /* space around content WITHIN DIV */
  margin: auto; /* space OUTSIDE the DIV setting to auto should center it */
}

#btnContainer {
  /* Targets the ID btnContainer; Otherwise the top most row of buttons
  to select different item categories */

  overflow: hidden;
  background-color: var(--category-selector-back-drop-colour);
  background-image: linear-gradient(
    to left,
    var(--category-selector-back-drop-colour),
    var(--category-selector-back-drop-colour-grad)
  );
  color: var(--category-selector-text-colour);
  border-radius: 10px;
}

#btnContainer button {
  /* Targets the individual buttons within this category selector */

  background-color: var(--category-selector-button-back-drop);
  color: var(--category-selector-button-text);
  border: none;
  outline: none;
  cursor: pointer;
  float: left;
  padding: 14px 16px;
  transition: 0.3s;
}

#btnContainer button:hover {
  background-color: var(--category-selector-button-hover-bc);
}

#btnContainer button.active {
  /* Targets the ID btnContainer button dom element with class active */
  background-color: var(--category-selector-button-active-bc);
}

.itemContainer {
  /* Targets the container for EVERY Item listed */
  padding-top: 10px; /* space around content WITHIN DIV. intended to ensure items don't overlap */
  padding-left: 10px;
  padding-right: 10px; /* These give space for item listings from the top and sides of the category selector */
}

.filterDivOLD {
  /* Targets the container for EACH Item listed */
  background-color: var(--card-back-drop-colour);
  text-align: center;
  border-radius: 50px;
  animation-name: fadeEffect;
  animation-duration: 0.5s;
  max-width: 30%;
  min-width: 15%;
  min-height: 10%; /* Set the min height and width, allowing them to grow, depnding on internal divs */
  display: none; /* Ensures item is not visible, until changed by js when showing the item */
  margin-right: 5px; /* spacing outside the element, to give item lisitngs space between each other */
  margin-top: 5px;
  position: relative; /* assigning this relative allows child elements positioned absolute to respect is boundries. */
  opacity: 1;
}

.filterDiv {
  background-color: var(--card-back-drop-colour);
  background-image: linear-gradient(
    60deg,
    var(--card-back-drop-colour),
    var(--card-back-drop-colour-grad)
  );
  text-align: center;
  animation-name: fadeEffect;
  animation-duration: 0.5s;
  display: none;
  position: relative;
  border-bottom: 0.3rem solid var(--card-back-drop-colour-border);
}

.filterDiv:hover {
  background-color: var(--card-back-drop-colour-hover);
}

@keyframes fadeEffect {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.item {
  display: grid;
  grid-template-columns: repeat(3, minmax(0.1fr, 1fr));
  grid-column-gap: 5px;
  grid-row-gap: 5px;
}

.show {
  /* Targets the show class attached to an Item Container via JS
  for which Items are currently visible */

  /* While previously inline-block, to show the items, it needs to be grid */

  display: inline-block;
}

.itemName {
  /* Targets the Friendly Name of the Item */

  /* font-size: 1.5vw; /* Font size based on viewport width */

  font-size: 1.4em;
  margin-bottom: 5px; /* spacing outside the border of the text */
  grid-column: 2;
  grid-row: 1;
}

.plugin-top-left {
  /* The plugin Item of the Item */

  grid-column: 1;
  grid-row: 1;
  margin-top: 5px;
}

.plugin-center {
  grid-column: 2;
  grid-row: 2;
  margin-top: 5px;
  padding-bottom: 20px;
}

.plugin-top-right {
  grid-column: 3;
  grid-row: 1;
  margin-top: 5px;
}

.plugin-bottom-left {
  grid-column: 1;
  grid-row: 2;
  margin-top: 5px;
  padding-bottom: 20px;
}

.plugin-bottom-right {
  grid-column: 3;
  grid-row: 2;
  margin-top: 5px;
  padding-bottom: 20px;
}

.editItem {
  /* editItem SVG element */

  bottom: 4px; /* Distance from edges of parent relatively placed div  */
  left: 15px;
  position: absolute;

  /* absolute: removes element from document flow, in this case positioning
  relative to the initial containing block. */

  grid-column: 1;
  grid-row: 2;
}

.deleteItem {
  /* deleteItem SVG element */

  bottom: 4px;
  right: 15px;
  position: absolute;

  /* the same as editItem */

  grid-column: 3;
  grid-row: 2;
}

.optionsItem {
  grid-column: 2;
  grid-row: 1;
  position: absolute;
  right: 10px;
  top: 30%;
  opacity: 0;
  -webkit-transition: opacity 0.5s ease-out;
}

.optionsContent {
  position: absolute;
  left: -60px;
  top: -110%;
  display: block;
  opacity: 0;
  -webkit-transition: opacity 0.5s ease-out;
}

.optionsContent-Edit {
  background-color: var(--confirm-action-back-drop-colour);
  color: var(--confirm-action-text-colour);
  margin: 10px;
  border-radius: 10px;
  padding: 5px;
  cursor: pointer;
  box-shadow: -5px 5px 2px black;
  -webkit-transition: box-shadow 0.3s ease-out;
}

.optionsContent-Edit:hover {
  box-shadow: -10px 8px 3px black;
  -webkit-transition: box-shadow 0.5s ease-in;
}

.optionsContent-Delete {
  background-color: var(--destroy-action-back-drop-colour);
  color: var(--destroy-action-text-colour);
  margin: 10px;
  border-radius: 10px;
  padding: 5px;
  cursor: pointer;
  box-shadow: -5px 5px 2px black;
  -webkit-transition: box-shadow 0.3s ease-out;
}

.optionsContent-Delete:hover {
  box-shadow: -10px 8px 3px black;
  -webkit-transition: box-shadow 0.5s ease-in;
}

.filterDiv:hover .optionsItem {
  opacity: 1;
}

.optionsItem:hover .optionsContent {
  opacity: 1;
  transition: opacity 0.5s ease-in;
  -webkit-transition: opacity 0.5s ease-in;
}

.new-button-container {
  text-align: center;
}

.new-button-container button {
  /* Button element in the New Item Button */
}

/* ============ */

/* CSS for form elements carried over from new/edit items */

.form-input {
  background-color: var(--form-back-drop-colour);
  color: var(--form-text-colour);
  width: 50%;
  box-sizing: border-box;
  padding: 10px 2px;
  margin: 2px 0;
  border-radius: 4px;
}

.readonly_id {
  display: none;
}

.plugin-example {
  margin-bottom: 15px;
  color: var(--form-example-colour);
}

.modal {
  /* The container of the modal */
  display: none; /* Hidden by default */
  position: fixed;
  z-index: 1; /* Sits on top */
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto; /* enable scroll if needed */
  background-color: inherit;
  background-color: rgba(0, 0, 0, 0.4);
}

.modal-content {
  /* The internal content of the modal */

  background-color: var(--modal-back-drop-colour);
  margin: 5% auto; /* 5% from the top and centered :: this was changed form 15% as to avoid a scroll bar appearing during edit item modals */
  padding: 20px;
  border: 1px solid #000;
  width: 40%;
  border-radius: 5px;
  text-align: center;
}

.modal-content .delete {
  /* The Model internal content confirming to delete button */

  background-color: var(--confirm-action-back-drop-colour);
  color: var(--confirm-action-text-colour);
  border: none;
  padding: 10px;
  border-radius: 4px;
  cursor: pointer;
  margin: 5px;
}

.modal-content .notDelete {
  /* The Modal Internal content deciding not to delete */

  background-color: var(--undo-action-back-drop-colour);
  color: var(--undo-action-text-colour);
  border: none;
  padding: 10px;
  border-radius: 4px;
  cursor: pointer;
  margin: 5px;
}

.modal-content .save {
  background-color: var(--confirm-action-back-drop-colour);
  color: var(--confirm-action-text-colour);
  border: none;
  padding: 10px;
  border-radius: 4px;
  cursor: pointer;
  margin: 5px;
}

.modal-content .notSave {
  background-color: var(--undo-action-back-drop-colour);
  color: var(--undo-action-text-colour);
  border: none;
  padding: 10px;
  border-radius: 4px;
  cursor: pointer;
  margin: 5px;
}

.modal-content .firstTimeModalContent {
  width: 100%;
  text-align: center;
  border-radius: 3px;
  margin-top: 10px;
  margin-bottom: 10px;
  padding: 15px 5px 20px 5px;
}

.firstTimeModalContent .firstTimeModalItem {
  display: grid;
  grid-template-columns: 1fr 25%;
}

.firstTimeModalItem .FirstTimeModalItemText {
  grid-column: 1;
  grid-row: 1;
}

.firstTimeModalItem .firstTimeModalItemButton {
  grid-column: 2;
  grid-row: 1;
  background-color: var(--create-action-back-drop-colour);
  color: var(--create-action-text-colour);
  border: none;
  border-radius: 4px;
  cursor: pointer;
  padding: 10px;
  margin: 5px;
  align-self: bottom;
}

.firstTimeModalItem .firstTimeModalItemLang {
  grid-template-columns: 50% 50%;
  display: grid;
}

.firstTimeModalLangChoice {
  grid-column: 1;
  grid-row: 1;
}

.firstTimeModalLangSubmit {
  grid-column: 2;
  grid-row: 1;
}

.firstTimeModalLangChoice select {
  width: 100%;
  padding: 10px;
  border: none;
  border-radius: 4px;
  margin: 5px;
  color: var(--create-action-text-colour);
  background-color: var(--create-action-back-drop-colour);
}

.modal-content .closeFirstTimeModal {
  background-color: var(--undo-action-back-drop-colour);
  color: var(--undo-action-text-colour);
  border: none;
  padding: 10px;
  border-radius: 4px;
  cursor: pointer;
  margin: 5px;
}
